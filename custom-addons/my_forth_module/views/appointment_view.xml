<?xml version="1.0" encoding="utf-8"?>
<odoo>
  
  <record id="view_hospital_appointment_search" model="ir.ui.view">
    <field name="name">hospital.appointment.search</field>
    <field name="model">hospital.appointment</field>
    <field name="arch" type="xml">
      <search>
        <group expand="0" string="Group By">
          <filter string="Patients" name="group_by_patient_ids" context="{'group_by':'patient_id'}"/>
        </group>
      </search>
    </field>
  </record>

  <record id="view_hospital_appointment_form" model="ir.ui.view">
    <field name="name">hospital.appointment.form</field>
    <field name="model">hospital.appointment</field>
    <field name="arch" type="xml">
      <!--? the comment bellow is how you remove the crud options from the form view with create, delete, edit attribute -->
      <!-- <form create="0" delete="0" edit="0"> -->
      <form>
        <!-- 
          ? this is the status widget that we can use to show and change the state of a model
          ? first creating a state model then give create a field with a widget attribute of statusbar and a name of the model
          ? the option attribute let us make changes on the state by clicking
          ? the states attrubute will show us this element if the field is have the current value
          ? using the data-hotkey attribute let us create hot key for our button and interactions
        -->
        <header>
          <button name="action_done" string="Mark As Done" type="object"
            class="oe_highlight" states="in_consultation" data-hotkey="d"/>
          <button name="action_in_consultation" string="In Consultation" type="object" 
          states="done,draft" data-hotkey="i"/>

          <!--
            ? using the attribute type of [action] allow us to launch the wizard using a view's action remember the weird name syntax ok?
            ? or we can use the type of [object] and define a function that return the same action, (see more in appointment.py)
            ? to access the [active_id], more or less the _rec_name value and pass it as default use the context attribute like bellow
            ? otherwise you can access the same [active_id] using the enviromment's context in the [default_get] function
          -->
          <button name="%(my_forth_module.action_cancel_appointment)d" string="Cancel" type="action" 
            states="in_consultation,draft" context="{'default_appointment_id':active_id,'hide_appointment_id':1}"/>
          <!-- <button name="action_cancel" string="Cancel" type="object" states="in_consultation"/> -->

          <button name="action_draft" string="Rest To Draft" type="object" states="cancel"/>
          
          <field name="state" widget="statusbar" nolabel="1" 
          statusbar_visible="draft,in_consultation,done"/>
          <!-- options="{'clickable' : '1'}" -->
        </header>

        <sheet>
          <!--
            ? this is the 'rating' widget that we can use to either rate or prioritize our models
            ? first creating a priority model then give create a field with a widget attribute of priority and a name of the model
            ? everything else like div, h1 are optional
          -->
          <div class="oe_title">
            <h1>
                <field name="name" readonly="1"/>
            </h1>
          </div>
          <div>
            <h1>
              <field name="priority" widget="priority" class="mr-3"/>
            </h1>
          </div>

          <group>
            <group>
              <!--? You can add a help attribute to provide comment for ui users, work in most elements -->
              <!--?113? with [widget="selection"] to disbaled typing and other options while selecting a many2one field in form view -->
              <!-- <field name="patient_id" widget="selection" help="this is the patient id, can be found in breadcrumbs too" default_focus="1"/> -->
              <field name="patient_id" help="this is the patient id, can be found in breadcrumbs too" default_focus="1"/>
              <!--
                ?111? with [readonly] attribute will not save our record's field even when using onchange decorator
                ? [force_save] to forcefully save a readonly field too when using [readonly]
              use with  -->
              <field name="ref" readonly='1' force_save="1"/>
              <field name="gender"/>
              <field name="duration" />
            </group>
            <group>
              <field name="appointment_time" />
              <field name="hide_sales_price" groups="base.group_no_one"/>
              <!--? with the [default_focus] attribute we can default the focus whenever this form is reached -->
              <field name="booking_date"/>
              <field name="doctor_id" widget="many2one_avatar"/>
              <field name="operation_id" />
              <!--
                ? the button type of [object] will search for a function with the sane name as the name's attribute value
                ? the function will be declare in the model file in python and read there
                ? while the [action] button type will search for a window action in odoo
              -->
              <button name="object_test" string="Object Button" type="object" class="oe_highlight"/>
              <button name="%(my_forth_module.action_hospital_patient)d" string="Action Button" 
                type="action" class="oe_highlight" confirm="Are you sure to open patient action"
                help="You will be redirected to patient record"/>
            </group>
          </group>

          <!--? the notebook element allow you to create paginatable pages with buttons -->
          <notebook>
            <page name="prescription" string="Prescription">
              <!--? using the new odoo15 feature we can add realtime collaborative, resize with other using the option attribute bellow -->
              <field name="prescription" placeholder="Enter a prescription"
              options="{'collaborative':true, 'resizable':true, 'codeview':true}"/>
            </page>
            <page name="pharmacy" string="Pharmacy">
              <group>
                <field name="appointment_time" />
                <field name="booking_date" />

                <!--
                  ? here is where we add the one2many field to the view with a nested tree and form for it's model 
                  ? in this case [hospital.appointment.pharmacy.lines], also add the editable attribute to the tree element
                  ? to allow editing in the tree without entering the form view options include [top] and [bottom]
                  ? the attrs attribute will allow us to do all kind of funtionallity with dictionary such as hide a column
                -->
                <field name="pharmacy_line_ids">
                  <tree editable="bottom">
                    <field name="product_id" />
                    <field name="price_unit" attrs="{'column_invisible': [('parent.hide_sales_price', '=', True)]}"/>
                    <field name="qty" />
                    <field name="appointment_id" />
                  </tree>
                  <form>
                    <group>
                      <field name="product_id" />
                      <field name="price_unit" />
                      <field name="qty" />
                      <field name="appointment_id" />
                    </group>
                  </form>
                </field>
                
              </group>
            </page>
            <!--
              ?126? adding a new page for the [widget="gauge"] and [widget="percentpie"] widget in form view, 
              ? with ton of options from [options] attribute such as max_field, label or widgh and height
              ! weird bug that all 3 progress widget is not compatible to be near eachother, the lastest will overide all
            -->
            <page name="progress" string="Progress">
              <field name="progress" widget="gauge" 
                options="{'style': 'width:100px; height: 100px;'}"/>
              <!-- <field name="progress" widget="percentpie"/> -->
            </page>
          </notebook>
        </sheet>
        
        <div class="oe_chatter">
          <field name="message_follower_ids" groups="base.group_user"/>
          <field name="activity_ids"/>
          <field name="message_ids"/>
        </div>

      </form>
    </field>
  </record>

  <record id="action_hospital_appointment" model="ir.actions.act_window">
    <field name="name">Appointments</field>
    <field name="type">ir.actions.act_window</field>
    <field name="res_model">hospital.appointment</field>
    <field name="view_mode">tree,form,activity,calendar</field>
    <field name="context">{}</field>
    <field name="help" type="html">
      <p class="o_view_nocontent_smiling_face">
        Add your first Appointment
      </p>
    </field>
  </record>

  <!--?125? adding a server action to the tree view to mark as done to all selected records -->
  <record id="action_server_mark_as_done" model="ir.actions.server">
    <field name="name">Mark As Done</field>
    <field name="type">ir.actions.server</field>
    <!--? [model_id] used to specify the model being interacted with syntax is [model_model_name] same as [binding_model_id] -->
    <field name="model_id" ref="model_hospital_appointment" />
    <field name="binding_model_id" ref="model_hospital_appointment" />
    <!--? this is a server's model to execute code (check on server action in setting) -->
    <field name="state">code</field>
    <!--? use [binding_view_types] field to specify which which view to show this action -->
    <field name="binding_view_types">list</field>
    <!--? after declaring which state is the sever action [code] we can write code inside the [code] field, the functions is taken from the model specify above -->
    <field name="code">
      for record in records:
        if record.state == 'in_consultation':
          record.action_done()
    </field>
  </record>

  <menuitem
    id="menu_appointment"
    name="Appointments"
    action="action_hospital_appointment"
    parent="menu_appointment_master"
    sequence="10"/>

  <record id="view_hospital_appointment_tree" model="ir.ui.view">
    <field name="name">hospital.appointment.tree</field>
    <field name="model">hospital.appointment</field>
    <field name="arch" type="xml">
      <!--? the comment bellow is how you remove the crud options from the tree view with create and delete attribute -->
      <!-- <tree create="0" delete="0"> -->
      <!--
        ? You can add color indication for the font with decoration attribute depending on model value just like badge
        ? also you can add sample data using the [sample] attribute
        ? add the [multi_edit] attribute to give allow select multiple objects and edit a field simultaneously
      -->
      <tree decoration-success="state == 'done'" decoration-danger="state == 'cancel'"
        sample="1" multi_edit="1">
        <!--?102? to add a button in the tree view use header, and everything is like in form view (allowing us to change records with selections) -->
        <!--! not that [data-hotkey] and [states] does not work in tree view -->
        <header>
          <button name="action_done" string="Mark As Done" type="object"/>
        </header>
        <field name="name" />
        <field name="patient_id" />
        <!--
          ? with option attribute allow us to optionally hide or show a model's field 
          ? but still allow us to choose with a 3 dots at the right of the table 
        -->
        <field name="gender" optional="show"/>
        <field name="appointment_time" />
        <field name="booking_date" optional="show"/>
        <!--? use this widget [list_activity] along with activity model from mail to add activies with icons for objects -->
        <field name="activity_ids" widget="list_activity"/>
        <!--
          ? here we add a new [doctor_id] field in model file that point to the system users, 
          ? allowing us to choose an existing user and show their avatar with the [many2one_avatar] widget
          ? or the [many2one_avatar_user] widget to allow clicking on the avatar showing the chat from the disscuss module
        -->
        <field name="doctor_id" widget="many2one_avatar_user"/>
        <!--
          ? To add badge widget just add the widget attribute with badge value with corresponding color 
          ? for each decoration attribute with a value condition of the model
        -->
        <field name="state" widget="badge" optional="show"
          decoration-success="state == 'done'" 
          decoration-danger="state == 'cancel'"
          decoration-info="state == 'draft'"
          decoration-warning="state == 'in_consultation'"/>
        <!-- ?103? to add buttons in the record table itself, simply put it here also all fontawesome icons are supported-->
        <button name="action_done" type="object"  title="Action Done"
          class="fa fa-check btn-success" attrs="{'invisible':[('state', '!=', 'in_consultation')]}"/>
        <button name="%(my_forth_module.action_cancel_appointment)d" type="action" title="Action Cancel"
          context="{'default_appointment_id':active_id,'hide_appointment_id':1}"
          class="fa fa-times btn-danger" attrs="{'invisible':[('state', '=', 'cancel')]}"/>
        <!--
          ?105? adding a button the tree view's group by sub view
          ? with the name attribute we can specify which group by selection will this button shown
          ! also groupby elements can only be added by many2one fields
          ! THIS ACTION NEED TO BE DEFINE IN IT ORIGINAL CORE MODULE
        -->
        <groupby name='patient_id'>
          <button name="action_test" string="Click Me?" type="object" class="oe_highlight"/>
          <!--? you can also specify a special [edit] value for [type] attribute to edit the core record -->
          <button name="edit" string="Edit" type="edit"/>
        </groupby>
        <!--?126? here we adding the widget [widget="progressbar"], there also an option attribute which let us specify max value and editable -->
        <field name="progress" widget="progressbar" options="{'current_value':'progress','max_value':'100','editable':True}"/>
      </tree>
    </field>
  </record>

  <!--?127? creating a calendar view, remember to add this view in action in view_mode -->
  <record id="view_hospital_appointment_calendar" model="ir.ui.view">
    <field name="name">hospital.appointment.calendar</field>
    <field name="model">hospital.appointment</field>
    <field name="arch" type="xml">
      <!--
        ?127? before creating a calendar view give it a [date_start] attribute with value of field of a starting date also when creating a new record the date is pass into that field
        ? with the date_delay we can specify a duration, just add a float field in the model and provide it in date_delay
        ? you can also specify which [mode] the calendar view is in by default [day],[month],...
        ? add a [color] attribute with the field you want to change colors preferbly a selection
        ? to remove the ability to add events to calendar view, change [quick_add] to false, instead this will create a new appointment
        ? to add filters to the calendar view just add a [filters] attribute to the field which you want to filter
        ? to add an avatar image use [avatar_field="image_field"] attribute, since the patient_id field is a many2one field than in it core model image is available
        ? use the [hide_time] to disable the time preview when clicking on a record
        ? [form_view_id] attribute to specify which form view to open, incase we have multiple form view for this model
        ? [event_open_popup="True"] to open a form view in popup mode
        ? use [event_limit="integer"] to limit how many records is display at once, showing [integer -1] with option to show more
      -->
      <calendar string="Appointments" date_start="booking_date" date_delay="duration" mode="month" color="patient_id"
        quick_add="False" hide_time="True" form_view_id="%(my_forth_module.view_hospital_appointment_form)d"
        event_open_popup="True" event_limit="5">
        <field name="patient_id" filters="1" avatar_field="image"/>
        <field name="state" invisible="1" filters="1"/>
      </calendar>
    </field>
  </record>

  <record id="view_hospital_appointment_activity" model="ir.ui.view">
    <field name="name">hospital.appointment.activity</field>
    <field name="model">hospital.appointment</field>
    <field name="arch" type="xml">
      <activity string="Appointments">
        <field name="patient_id" />
        <field name="ref" />
        <templates>
          <div t-name="activity-box">
            <img t-att-src="activity_image('hospital.patient', 'image', record.patient_id.raw_value)"
              t-att-title="record.patient_id.value" t-att-alt="record.patient_id.value"/>
            <div> 
              <field name="ref" display="full"/>
            </div>
          </div>
        </templates>
      </activity>
    </field>
  </record>

</odoo>