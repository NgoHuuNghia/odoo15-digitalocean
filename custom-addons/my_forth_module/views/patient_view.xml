<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <!--? This is the action (the click specifically) let us list our module-->
  <record id="action_hospital_patient" model="ir.actions.act_window">
    <field name="name">Patient</field>
    <!--* the type of actions find these on the debug menu -->
    <field name="type">ir.actions.act_window</field>
    <!--* the module which we listing -->
    <field name="res_model">hospital.patient</field>
    <!--* all the view modes we using find on debug menu -->
    <!--! this should be in the debug menu too right nah can be -->
    <field name="view_mode">tree,form</field>
    <!--* all our defaults filter and group by learn more in search's view -->
    <field name="context">{'search_default_filter_male':1, 'search_default_group_by_gender':1}</field>
    <!--* just the first message before we add any data -->
    <field name="help" type="html">
      <p class="o_view_nocontent_smiling_face">
        Add your first patient
      </p>
    </field>
  </record>

  <!--? and the action attribute where we provide our actions duh!  -->
  <!--! remember that actions need to be declare first for menu to recongize it -->
  <menuitem
    id="menu_patient"
    name="Patients"
    action="action_hospital_patient"
    parent="menu_patient_master"
    sequence="0"/>

  <!--? this is the tree view for our patient's model what we first see when this view is triggered  -->
  <record id="view_hospital_patient_tree" model="ir.ui.view">
    <!--* unique name for our tree view (follow this naming convention btw) -->
    <field name="name">hospital.patient.tree</field>
    <field name="model">hospital.patient</field>
    <!--* and this where we write our tree's view (arch is mandatory) -->
    <field name="arch" type="xml">
      <!--?96? [export_xlsx] attribute will decide if the tree view can be export into a xlsx file -->
      <tree export_xlsx='0'>
        <!--* field to show as a table on our first view -->
        <field name="name" string="Patient Name"/>
        <field name="gender" />
        <!--?118? with [sum] attribute will let us sum all the counts at the end of collum of a field just add a string -->
        <field name="appointment_count" sum="Total Appointments"/>
        <!--?118? there also a [avg] to provide an average of a total sum just also add string -->
        <field name="age" avg="Average Age"/>
        <field name="ref" />
        <field name="tag_ids" widget="many2many_tags" options="{'color_field': 'color'}"/>
      </tree>
    </field>
  </record>

  <!--? this is the search view for our patient's model the search parameters/filters/group by for our search  -->
  <record id="view_hospital_patient_search" model="ir.ui.view">
    <field name="name">hospital.patient.search</field>
    <field name="model">hospital.patient</field>
    <!--* and this where we write our search (arch is mandatory) -->
    <field name="arch" type="xml">
      <search>

        <!--? this block is all the availables fields to search -->
        <!--
          * with filter_domain attribute let us search search simultaneously grouped 
          * (just add more [|] see it as bettween the tuples so 3 OR for 4 tuples 
          * the tuples in of itself only have 3 values
        -->
        <field name="name" string="Patient Name" filter_domain="['|',('name', 'ilike', self), ('ref', 'ilike', self)]" />
        <field name="age" />
        <field name="gender" />
        <field name="ref" />

        <!--
          ? this block is all the default filters where continous filter are bound with OR
          ? logic and the separator element will bound each filter group by an AND logic
          * the domain attribute is where we provide the filter logic follow the syntax
          * as weird as it is, also remember to use special character for forward and back
          * arrows [&lt;]
        -->
        <filter name="filter_male" string="Male" domain="[('gender', '=', 'male')]" />
        <filter name="filter_female" string="Female" domain="[('gender', '=', 'female')]" />
        <separator />
        <!-- <filter name="filter_kids" string="Kids" domain="[('age', '&lt;=', 5)]" />
        <separator /> -->
        <filter name="filter_archive" string="Archived" domain="[('active', '=', False)]" />

        <!--? this block is all the default group by for the search -->
        <group expand="0" string="Group By">
          <!--* context attribute is how to provide the logic for the group by -->
          <filter string="Genders" name="group_by_genders" context="{'group_by':'gender'}"/>
        </group>

        <!--? this block is all the search panel on the left that you can provide -->
        <searchpanel>
          <field name="gender" string="Gender" icon="fa-users" select="multi" enable_counters="1"/>
        </searchpanel>

      </search>
    </field>
  </record>

  <!--? this is the form view for our patient's model what we see when we click on a object/user to edit and create -->
  <record id="view_hospital_patient_form" model="ir.ui.view">
    <field name="name">hospital.patient.form</field>
    <field name="model">hospital.patient</field>
    <field name="arch" type="xml">
      <form>
        <!--* sheet element will give us the margin: auto sheet that base modules have, nice -->
        <sheet>
          <!--?129? adding stats button to form view, check contacts's form view for example -->
          <div class="oe_button_box" name="button_box">
            <button name="action_view_appointments" type="object" class="oe_stat_button" icon="fa-star">
              <field name="appointment_count" string="Appointments" widget="statinfo"/>
            </button>
          </div>
          <!--?122? using the div bellow we can show an alert base on some condition and remove it with [data-dimiss] -->
          <div class="alert alert-warning text-center o_form_header" role="alert"
            attrs="{'invisible':[('is_birthday','=',False)]}">
            <a class="close" data-dismiss="alert" href="#">x</a>
            <div>
              <strong>Today is the birthday of</strong>
            </div>
            <div>
              Wish <field name="name" readonly="1"/>
            </div>
          </div>
          <!--* add the image field here with widget attribute of [image] to show image -->
          <field name="image" widget="image" class="oe_avatar"/>
          <!--?100? to add a title for this form just add like a div container with class of [oe_title] and a h2 contain that field -->
          <div class='oe_title'>
            <h4>
              <field name="ref" readonly='1'/>
            </h4>
            <h2>
              <!--
                ?101? to add a label to field without one (not inside group) than give it using the label element,
                ? [class="oe_edit_only"] will only show it when in edit mode 
              -->
              <label for="name" string="Name" class="oe_edit_only"/>
              <field name="name" />
            </h2>
          </div>
          <!--* the higher group element will let us separate the fields horizontally -->
          <group>
            <!--* the nested group element will let us separate the siblings fields vertically -->
            <group>
              <field name="date_of_birth" />
              <field name="age" />
              <!--! i be honest man, no idea what context.get does -->
              <field name="gender" invisible="context.get('hide_gender')" widget="radio"/>
              <!-- <field name="appointment_ids" /> -->
            </group>
            <group>
              <!--* use [many2many_tags] widget to create the nice looking tag in the view -->
              <!--* also with the options attribute we can provide an actual field with color provided and add it here using [color_field] -->
              <field name="tag_ids" widget="many2many_tags" options="{'color_field': 'color'}"/>
              <!--*112* with the [widget="many2many_checkboxes"] we can have normal chexkboxes for many2many fields instead (not recommended for big fields) -->
              <!-- <field name="tag_ids" widget="many2many_checkboxes" options="{'color_field': 'color'}"/> -->
              <!--*15* invisible attribute will decide if this field is visible or not useful for when we use the archive action -->
              <field name="active" invisible="1" />
              <field name="is_birthday" />
            </group>
            <!-- <field name="appointment_ids" /> -->
          </group>
          <!--
            ?98?99?100? hide or read only fields base on conditions using the [attrs] attribute with the [invisible] or [readonly] dictionary with a list
            ? of tuples of conditional domains using the PREFIX NOTATION with an OR operation provided by ['|'] in front of the list
            ? also the [required] will also work here
          -->
          <group name="other_info" string="Other infomations">
            <group name="familial_info" string="Familial Infomations">
              <field name="parent" attrs="{'invisible':[('age', '>=', '18')]}"/>
              <field name="marital_status" attrs="{'invisible':[('age', '&lt;', '18')]}"/>
              <field name="partner_name" attrs="{
                'invisible':[('marital_status', '!=', 'married')],
                'required':[('marital_status', '=', 'married')],
              }"/>
            </group>
            <group name="contanct_info" string="Contact Infomations">
              <!--
                ?123? with the [widget="phone"] we can use odoo's phone functionalities
                ? such as sending messages on desktop using odoo's sms from the enterprise version
                ? there also [widget="email"] and [widget="website"] note that only .com will be clickable
              -->
              <field name="phone" widget="phone"/>
              <field name="email" widget="email"/>
              <field name="website" widget="website"/>
            </group>
          </group>
        </sheet>
        <!--? the chatter for the form using the mail module with the thread and activity method don't forget to depends them -->
        <div class="oe_chatter">
          <!--* group attribute is the group of users that are allow to see and interact with this chatter -->
          <field name="message_follower_ids" groups="base.group_user"/>
          <!--* mail module's activity method that inherited in the model and depends -->
          <field name="activity_ids"/>
          <field name="message_ids"/>
        </div>
      </form>
    </field>
  </record>

</odoo>